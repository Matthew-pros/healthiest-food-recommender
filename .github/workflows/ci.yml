name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Run Streamlit sanity check
      run: |
        python -c "import app; print('✓ App imports successfully')"
        python -c "import ast; ast.parse(open('app.py').read()); print('✓ App syntax is valid')"
        
    - name: Run isort check
      run: |
        isort --check-only .
        
    - name: Run black check
      run: |
        black --check .
        
    - name: Run flake8 linting
      run: |
        flake8 app.py --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run pytest tests
      run: |
        pytest tests/ -v --tb=short
        
    - name: Run pre-commit hooks
      run: |
        pre-commit install
        pre-commit run --all-files

  e2e:
    runs-on: ubuntu-latest
    # Only run E2E tests if not on fork (to avoid issues with browser setup in forks)
    if: github.repository_owner == 'Matthew-pros'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Run E2E smoke tests
      run: |
        pytest tests/test_e2e.py -v --tb=short
      env:
        # Use a dummy API key for E2E tests (tests don't actually call OpenAI)
        OPENAI_API_KEY: sk-test-dummy-key-for-e2e-testing
